### section3 항목의 순서내 내용을 수정할 수 없는 튜
### 3.1 괄호로 정의하는 시퀀스 튜플

# 문자열, 리스트와 같은 항목의 나열인 시퀀스
# 리스트와 달리 항목의 순서나 내용의 수정이 불가능하다

num=(1,2,3,4)
num2=1,2,3,4 # 괄호가 없어도됨

## 튜플의 생성
# 1. 빈 튜플생성
empty1=()
empty2=tuple()

# 일반 튜플
credit=16,17
print(credit) # (16, 17)

# 2. 항목이 하나인 튜플 생성시 주의요망~!~!@
#  항목이 하나인 튜플 생성시 반드시** 마지막에 콤마를 붙여야 한다.

tupa=1,
print(tupa) # (1,)

## 튜플 항목 참조와 출력 - 수정은 불가능합니다.
# 슬라이싱, 첨자 참조 가능

# 1. 슬라이싱
tupa=1,2,3,4
print(tupa[1:4]) # (2, 3, 4)

# 2. 첨자 참조
print(tupa[1]) # 2

## count()와 index()는 튜플도 사용 가능

## tip : 좀더 알아봅시다!
# 동일한 객체일시 메모리 공간 위치가 같다. id()는 메모리 주소 반환
# 이는 문자열과 튜플과 같이 수정이 불가능할 경우에만 그런듯
p='python'
y='python'
print(id(p), id(y)) # 4410219056 4410219056
print(p is y) # True

# 튜플인 경우
t1=1,2,3
t2=1,2,3
print(id(t1),id(t2)) # 4450889920 4450889920
print(t1 is t2) # True

# 리스트인 경우? ==연산자시 True, 하지만 메모리주소값은 다름.
l1=[1,2,3]
l2=[1,2,3]
print(id(l1),id(l2)) # 4392566400 4392566720
print(l1 is l2) # False 다름!

### 3.2 튜플 연결과 반복, 정렬과 삭제

## 튜플 연결+ / 반복 * 연산자
kpop='bts','블랙핑크'
num=7,4
print(kpop+num) # ('bts', '블랙핑크', 7, 4)
print(num*2) # (7, 4, 7, 4)

## sorted() : 튜플 항목의 순서를 정렬한 '리스트'를 반환하는 내장 함수
fruit=5,2,3,1,4
a=sorted(fruit)
print(a) # [1, 2, 3, 4, 5] 리스트 반환

## del : 튜플 변수 자체 제거
print(a) # [1, 2, 3, 4, 5]
del a
# print(a) # NameError: name 'a' is not defined





